<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2002-2011 "Neo Technology,"
 Network Engine for Objects in Lund AB [http://neotechnology.com]

 This file is part of Neo4j.

 Neo4j is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.neo4j</groupId>
    <artifactId>parent-pom</artifactId>
    <version>23</version>
  </parent>

  <groupId>org.neo4j.drivers</groupId>
  <artifactId>neo4j-python-embedded</artifactId>
  <version>1.5-SNAPSHOT</version>
  <name>Embedded Neo4j Python bindings</name>
  <packaging>jar</packaging>
  <description>
    Python bindings for the embedded Neo4j graph database.
  </description>

  <licenses>
    <license>
      <name>GNU General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
      <comments>The software ("Software") developed and owned by Network Engine for
Objects in Lund AB (referred to in this notice as "Neo Technology") is
licensed under the GNU GENERAL PUBLIC LICENSE Version 3 to all third
parties and that license is included below.

However, if you have executed an End User Software License and Services
Agreement or an OEM Software License and Support Services Agreement, or
another commercial license agreement with Neo Technology or one of its
affiliates (each, a "Commercial Agreement"), the terms of the license in
such Commercial Agreement will supersede the GNU GENERAL PUBLIC LICENSE
Version 3 and you may use the Software solely pursuant to the terms of
the relevant Commercial Agreement.
      </comments>
    </license>
  </licenses>

  <dependencies>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j</artifactId>
      <version>1.5-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile><id>cpython-test</id>
      <properties>
        <python>python</python>
      </properties>
    </profile>
    <profile><id>jython-test</id>
      <properties>
        <python>jython</python>
      </properties>
    </profile>
  </profiles>

  <properties>
    <license-text.header>GPL-3-header.txt</license-text.header>
    <python>python</python>
  </properties>

  <build>
  
    <sourceDirectory>src/main/python</sourceDirectory>
    <testSourceDirectory>src/test/python</testSourceDirectory>
  
    <!-- Test execution -->
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <executable>${python}</executable>
              <workingDirectory>src/test/python</workingDirectory>
              <arguments>
                <!-- Uncomment this to enable remote JVM debugging under jython -->
                <!--argument>-J-Xdebug</argument>
                <argument>-J-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=1044</argument-->
                <argument>unit_tests.py</argument>
                <argument>--classpath</argument><classpath/>
                <argument>--junit</argument>
                <argument>${basedir}/target/surefire-reports</argument>
              </arguments>
              <environmentVariables>
                <PYTHONPATH>../../main/python:$PYTHONPATH</PYTHONPATH>
                <JYTHONPATH>../../main/python:$JYTHONPATH</JYTHONPATH>
              </environmentVariables>
            </configuration>
            <id>python-test</id>
            <phase>test</phase>
            <goals><goal>exec</goal></goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Generate appropriate python
           version from current project version. 
           See: http://www.python.org/dev/peps/pep-0386/ 
           -->
     <plugin>
       <groupId>org.codehaus.groovy.maven</groupId>
       <artifactId>gmaven-plugin</artifactId>
       <version>1.0</version>
       <executions>
         <execution>
           <id>pythonificate-version-number</id>
             <phase>generate-resources</phase>
             <goals>
               <goal>execute</goal>
             </goals>
             <configuration>
               <source>
                 def version = project.version
                 
                 // 1.5-SNAPSHOT -> 1.5.dev1
                 version = version.replace("-SNAPSHOT", ".dev1")
                 
                 // 1.5.RC1 -> 1.5.c1
                 version = version.replace("RC","c")
                 
                 // 1.5.M01 -> 1.5.b1
                 version = version.replace("M0","b")
                 version = version.replace("M","b")
                 
                 project.properties['pythonic_version'] = version
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- Produce source jars, for our documentation -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <configuration>    
          <attach>true</attach>
          <includes>
            <include>**/*.py</include>
          </includes>
        </configuration>
      </plugin>
      
      <!-- Assemble python distribution -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>python-distribution</id>
            <phase>package</phase>
            <configuration>
              <attach>true</attach>
              <appendAssemblyId>true</appendAssemblyId>
              <descriptors>
                <descriptor>src/main/assembly/python-distribution.xml</descriptor>
              </descriptors>
            </configuration>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  </build>

</project>

